[{"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Nav.js":"1","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js":"2","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/ChiffresCles.js":"3","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Register.js":"4","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Temoignage.js":"5","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Contact.js":"6","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/useContext/useContract.js":"7","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js":"8","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/NavParticulier.js":"9","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js":"10","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/index.js":"11","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Home.js":"12"},{"size":7566,"mtime":1610720822078,"results":"13","hashOfConfig":"14"},{"size":3405,"mtime":1610718009563,"results":"15","hashOfConfig":"14"},{"size":1067,"mtime":1609856023588,"results":"16","hashOfConfig":"14"},{"size":4760,"mtime":1609856023976,"results":"17","hashOfConfig":"14"},{"size":1875,"mtime":1609856023977,"results":"18","hashOfConfig":"14"},{"size":1408,"mtime":1609856433603,"results":"19","hashOfConfig":"14"},{"size":496,"mtime":1607878554608,"results":"20","hashOfConfig":"14"},{"size":3919,"mtime":1610718618632,"results":"21","hashOfConfig":"14"},{"size":2219,"mtime":1610720440762,"results":"22","hashOfConfig":"14"},{"size":4534,"mtime":1611052131657,"results":"23","hashOfConfig":"14"},{"size":1102,"mtime":1609856023822,"results":"24","hashOfConfig":"14"},{"size":2161,"mtime":1609856023634,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g7madj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Nav.js",["54","55"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js",["56"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/ChiffresCles.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Register.js",["57","58","59"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel } from '@chakra-ui/core'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\nimport { Web3Context } from \"web3-hooks\"\nimport { useHistory } from \"react-router-dom\"\n\n\n\nfunction Register() {\n\n  const [web3State, login] = useContext(Web3Context);\n  const noe = useContext(NoeContext)\n  // const toast = useToast()\n  const history = useHistory()\n\n  const [inputValueName, setInputValueName] = useState(null)\n  const [inputValuePhoneNumber, setInputValuePhoneNumber] = useState(null)\n  const [inputValueNameMember, setInputValueNameMember] = useState(null)\n  const [inputValuePhoneMember, setInputValuePhoneMember] = useState(null)\n\n\n  const handleOnClickCreateMember = async () => {\n    try {\n      const CMTX1 = await noe.createMember(inputValueNameMember, inputValuePhoneMember)\n      const cb = () => {\n        history.push(\"/profil_particulier\")\n\n      }\n      const filter = noe.filters.MemberCreated(web3State.account)\n      noe.once(filter, cb)\n    } catch (e) {\n\n    }\n  }\n\n  const handleOnClickCreateVeterinary = async () => {\n    try {\n      const CVTX1 = await noe.createVeterinary(inputValueName, inputValuePhoneNumber)\n      const cb = () => {\n        history.push(\"/profil_veterinaire\")\n\n      }\n      const filter = noe.filters.VeterinaryCreated(web3State.account)\n      noe.once(filter, cb)\n    } catch (e) {\n\n    }\n  }\n\n\n  // useEffect(() => {\n  //   if (noe) {\n  //     const cb = (_address) => {\n  //       toast({\n  //         position: 'bottom',\n  //         title: `SET`,\n  //         description: `send by ${_address}`,\n  //         status: 'success',\n  //         duration: 10000,\n  //         isClosable: true,\n  //       })\n  //     }\n  //     console.log('USEEFFECT CALLED FOR TOAST')\n  //     noe.on('MemberCreated', cb)\n  //     return () => {\n  //       console.log('USEEFFECT CLEANUP FOR TOAST')\n  //       noe.off('MemberCreated', cb)\n  //     }\n  //   }\n  // }, [noe, toast])\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat, sans-serif\">\n        <Box my={10} >\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Inscription Vétérinaires</Heading>\n              </Center>\n              <FormControl isRequired>\n                <Stack>\n                  <FormLabel pt={10} htmlFor=\"nom\">Nom</FormLabel >\n                  <Input id=\"nom\"\n                    value={inputValueName} onChange={(e) => { setInputValueName(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"nom\" />\n                  <FormLabel pt={10} htmlFor=\"mobile\">Mobile</FormLabel >\n                  <Input mb={20} id=\"mobile\"\n                    value={inputValuePhoneNumber} onChange={(e) => { setInputValuePhoneNumber(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"mobile\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" textTransform='uppercase' onClick={handleOnClickCreateVeterinary}>Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Inscription Particuliers</Heading>\n              </Center>\n              <FormControl isRequired >\n                <Stack >\n                  <FormLabel htmlFor=\"name\" pt={10}>Nom</FormLabel>\n                  <Input id=\"name\" value={inputValueNameMember} onChange={(e) => { setInputValueNameMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"name\" />\n                  <FormLabel htmlFor=\"tel\" pt={10}>Mobile</FormLabel>\n                  <Input mb={20} id=\"tel\" value={inputValuePhoneMember} onChange={(e) => { setInputValuePhoneMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"tel\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickCreateMember} textTransform='uppercase' >Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Register\n",["60","61"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Temoignage.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Contact.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/useContext/useContract.js",["62"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js",["63"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel, Select } from '@chakra-ui/core'\nimport Footer from '../Footer'\nimport NavVeteinaire from './NavVeterinaire'\nimport { NoeContext } from '../../App'\n\n\nfunction AjoutAnimal() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAddAdress, setInputValueAddAdress] = useState(null)\n  const [inputValueAddName, setInputValueAddName] = useState(null)\n  const [inputValueAddSexe, setInputValueAddSexe] = useState(null)\n  const [inputValueAddDate, setInputValueAddDate] = useState(null)\n  const [inputValueAddType, setInputValueAddType] = useState([\"Chien\", \"Chat\", \"Furet\"])\n  const [inputValueAddVaccin, setInputValueAddVaccin] = useState(null)\n\n\n  const handleOnClickAddAnimal = async () => {\n    const APVTX = await noe.animalToken(inputValueAddAdress, inputValueAddName, inputValueAddDate, inputValueAddSexe, inputValueAddVaccin, inputValueAddType)\n  }\n\n\n  return (\n    <>\n      <NavVeteinaire />\n      <VStack py={20} fontFamily=\"Montserrat, sans-serif\">\n        <Box my={10}>\n          <SimpleGrid columns={[1]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Ajouter un Animal</Heading>\n              </Center>\n              <FormControl>\n                <Stack >\n                  <FormLabel htmlFor=\"ETH\" pt={5}>ETH</FormLabel>\n                  <Input value={inputValueAddAdress} onChange={(e) => { setInputValueAddAdress(e.currentTarget.value) }}\n                    id='ETH' variant=\"filled\" placeholder=\"Adresse ETH\" aria-label=\"ETH\" />\n                  <FormLabel htmlFor=\"nom\" pt={5}>Nom</FormLabel>\n                  <Input value={inputValueAddName} onChange={(e) => { setInputValueAddName(e.currentTarget.value) }}\n                    id='nom' variant=\"filled\" placeholder=\"nom\" aria-label=\"nom\" />\n                  <FormLabel htmlFor=\"Date\" pt={5}>Date de naissance</FormLabel>\n                  <Input value={inputValueAddDate} onChange={(e) => { setInputValueAddDate(e.currentTarget.value) }}\n                    id='sexe' variant=\"filled\" placeholder=\"Date de naissance\" aria-label=\"Date de naissance\" />\n                  <FormLabel htmlFor=\"date-de-naissance\" pt={5}>Sexe</FormLabel>\n                  <Input value={inputValueAddSexe} onChange={(e) => { setInputValueAddSexe(e.currentTarget.value) }}\n                    id='date-de-naissance' variant=\"filled\" placeholder=\"Sexe\" aria-label=\"Sexe\" />\n                  <FormLabel htmlFor=\"type\" pt={5}>Vaccin</FormLabel>\n                  <Select value={inputValueAddVaccin} onChange={(e) => { setInputValueAddVaccin(e.currentTarget.value) }}\n                    id='vaccin' variant=\"filled\" placeholder=\"Est-il vacciné ?\" aria-label=\"Vaccin\" >\n                    <option>Oui</option>\n                    <option>Non</option>\n                  </Select>\n                  <FormLabel htmlFor=\"type\" pt={5}>Type</FormLabel>\n                  <Select value={inputValueAddType} onChange={(e) => { setInputValueAddType(e.currentTarget.value) }}\n                    mb={20} id='type' variant=\"filled\" placeholder=\"Sélectionner le type\" aria-label=\"Type\" >\n                    <option value=\"0\">Chien</option>\n                    <option value=\"1\">Chat</option>\n                    <option value=\"2\">Furet</option>\n                  </Select>\n                  <Button onClick={handleOnClickAddAnimal} _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" name=\"button\" textTransform='uppercase'>Ajouter</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n\n  )\n}\n\nexport default AjoutAnimal\n",["64","65"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/NavParticulier.js",["66"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js",["67","68"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/index.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Home.js",[],{"ruleId":"69","severity":1,"message":"70","line":36,"column":9,"nodeType":"71","messageId":"72","endLine":36,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":41,"column":11,"nodeType":"71","messageId":"72","endLine":41,"endColumn":20},{"ruleId":"69","severity":1,"message":"74","line":14,"column":21,"nodeType":"71","messageId":"72","endLine":14,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":13,"column":21,"nodeType":"71","messageId":"72","endLine":13,"endColumn":26},{"ruleId":"69","severity":1,"message":"75","line":26,"column":13,"nodeType":"71","messageId":"72","endLine":26,"endColumn":18},{"ruleId":"69","severity":1,"message":"76","line":40,"column":13,"nodeType":"71","messageId":"72","endLine":40,"endColumn":18},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"69","severity":1,"message":"81","line":6,"column":21,"nodeType":"71","messageId":"72","endLine":6,"endColumn":22},{"ruleId":"69","severity":1,"message":"82","line":21,"column":11,"nodeType":"71","messageId":"72","endLine":21,"endColumn":16},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},{"ruleId":"69","severity":1,"message":"73","line":20,"column":11,"nodeType":"71","messageId":"72","endLine":20,"endColumn":20},{"ruleId":"69","severity":1,"message":"85","line":22,"column":9,"nodeType":"71","messageId":"72","endLine":22,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":29,"column":11,"nodeType":"71","messageId":"72","endLine":29,"endColumn":20},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'colorMode' is assigned a value but never used.","'login' is assigned a value but never used.","'CMTX1' is assigned a value but never used.","'CVTX1' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'_' is assigned a value but never used.","'APVTX' is assigned a value but never used.",["86"],["87"],"'wallet' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]