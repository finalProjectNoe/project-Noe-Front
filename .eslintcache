[{"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Nav.js":"1","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js":"2","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/ChiffresCles.js":"3","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Register.js":"4","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Temoignage.js":"5","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Contact.js":"6","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/useContext/useContract.js":"7","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js":"8","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/NavParticulier.js":"9","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js":"10","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/index.js":"11","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Home.js":"12","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/App.js":"13","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Footer.js":"14","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Admin.js":"15","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/CommentÃ§aMarche.js":"16","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/contracts/NoeContract.js":"17","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js":"18"},{"size":7916,"mtime":1611744900260,"results":"19","hashOfConfig":"20"},{"size":3405,"mtime":1610718009563,"results":"21","hashOfConfig":"20"},{"size":1205,"mtime":1611071297863,"results":"22","hashOfConfig":"20"},{"size":4760,"mtime":1609856023976,"results":"23","hashOfConfig":"20"},{"size":2011,"mtime":1611071393015,"results":"24","hashOfConfig":"20"},{"size":1408,"mtime":1609856433603,"results":"25","hashOfConfig":"20"},{"size":496,"mtime":1607878554608,"results":"26","hashOfConfig":"20"},{"size":3919,"mtime":1610718618632,"results":"27","hashOfConfig":"20"},{"size":2540,"mtime":1611074284551,"results":"28","hashOfConfig":"20"},{"size":4746,"mtime":1611074284545,"results":"29","hashOfConfig":"20"},{"size":1219,"mtime":1611748696050,"results":"30","hashOfConfig":"20"},{"size":2161,"mtime":1609856023634,"results":"31","hashOfConfig":"20"},{"size":412,"mtime":1607878374520,"results":"32","hashOfConfig":"20"},{"size":1230,"mtime":1609856023884,"results":"33","hashOfConfig":"20"},{"size":4533,"mtime":1609856023884,"results":"34","hashOfConfig":"20"},{"size":1863,"mtime":1609856023689,"results":"35","hashOfConfig":"20"},{"size":15417,"mtime":1607964183607,"results":"36","hashOfConfig":"20"},{"size":2727,"mtime":1609856024248,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1g7madj",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Nav.js",["84","85"],"import React, { useContext, useState } from 'react'\nimport { Button, Box, Flex, Divider, Image, Spacer, Input, FormControl, Center, SimpleGrid, InputGroup, Text, HStack, useColorMode, useColorModeValue } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom';\nimport Logo from '../assets/logo.png'\nimport BurgerBlack from '../assets/menu_black.svg'\nimport BurgerWhite from '../assets/menu_white.svg'\nimport Suitcase from '../assets/suitcase.svg'\nimport SleepMode from '../assets/sleep-mode.svg'\nimport Sun from '../assets/sun.svg'\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  DrawerCloseButton,\n  useDisclosure,\n  Icon,\n} from \"@chakra-ui/core\"\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow,\n  Portal,\n  PopoverCloseButton,\n} from \"@chakra-ui/core\"\nimport { NoeContext } from '../App'\nimport { Web3Context } from \"web3-hooks\"\nimport { useHistory } from \"react-router-dom\"\n\n\n\nfunction Nav() {\n\n  const noe = useContext(NoeContext)\n  const [web3State, login] = useContext(Web3Context)\n  const history = useHistory()\n\n\n  const [inputAnimalById, setInputAnimalById] = useState(null)\n  const [getValueAnimalById, setGetValueAnimalById] = useState(null)\n  const { colorMode, toggleColorMode } = useColorMode()\n\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef()\n\n\n  const handleOnClickGetAnimalByID = async () => {\n    try {\n      const res = await noe.getAnimalById(inputAnimalById)\n      console.log(res)\n      setGetValueAnimalById(res.toString())\n    } catch (e) {\n    }\n  }\n\n  // A VENIR -> Gerer l'etat de la Blockchain\n\n  // const [isRegistred, setIsRegistred] = useState(false)\n\n  // const handleStart = async () => {\n  //   await login()\n  //   // if(web3State.isLogged) {\n  //   //   console.log(\"test\")\n  //   //   //redirection here\n  //   //   history.push(\"/register\")}\n  //   }\n\n  // useEffect(() => {\n  //   if (web3State.isLogged === true && isRegistred === false) {\n  //     setIsRegistred(true)\n  //     history.push(\"/register\")\n  //   } \n\n  // }, [web3State.isLogged, history, isRegistred])\n\n  return (\n    <>\n      <Flex fontFamily=\"Montserrat, sans-serif \">\n        <Box py={4}>\n          <HStack>\n            <Link to=\"/\">\n              <Image width=\"100%\"\n                height=\"auto\" boxSize=\"100px\" objectFit=\"cover\" src={Logo} alt=\"logo noÃ©\" />\n            </Link>\n\n            {/*<Button ml={10} name=\"button\" _hover={{\n              bg: \"teal.500\",\n              color: \"white\",\n            }} bg=\"brand.100\" color=\"white\" textTransform='uppercase' mr={5}><Link to=\"/admin\">Admin</Link></Button>*/}\n\n          </HStack>\n        </Box>\n        <Spacer />\n\n        <Box my={12} as=\"samp\" fontFamily=\"Montserrat, sans-serif \" fontSize=\"12px\" mr={6}>\n          <HStack>\n            <Popover>\n              <PopoverTrigger>\n                <Button name=\"button\"><Image width=\"100%\"\n                  height=\"auto\" boxSize=\"25px\" src={Suitcase} alt=\"Provider status\" /></Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverBody>\n                    <Text fontWeight='bold'>Web3: {web3State.isWeb3 ? (<Text color=\"green.500\">injected âœ… </Text>\n                    ) : (\n                        <Text color=\"red.500\">not found ðŸ›‘ </Text>\n                      )}</Text>\n                    <Text fontWeight='bold'>Wallet: {web3State.isLogged ?\n                      <Text color=\"green.500\">{web3State.isMetamask} Connected âœ… </Text>\n                      :\n                      <Text color=\"red.500\">{web3State.isMetamask} Disconnected ðŸ›‘ </Text>}</Text>\n                    <Text fontWeight='bold'>Network name: {web3State.networkName}</Text>\n                    <Text fontWeight='bold'>Network id: {web3State.chainId}</Text>\n                    <Text fontWeight='bold'>Account: {web3State.account}</Text>\n                    <Text fontWeight='bold'>Balance: {web3State.balance}</Text>\n                  </PopoverBody>\n                  <PopoverCloseButton />\n                </PopoverContent>\n              </Portal>\n            </Popover>\n\n            {!web3State.isLogged && (\n\n              <Button ml={10} name=\"button\" _hover={{\n                bg: \"teal.500\",\n                color: \"white\",\n              }} bg=\"brand.100\" color=\"white\" textTransform='uppercase' mr={5} onClick={login}>Start</Button>\n\n            )}\n            <Button name=\"button\" onClick={toggleColorMode}>\n              {colorMode === \"light\" ? <Image width=\"100%\"\n                height=\"auto\" boxSize=\"25px\" src={SleepMode} alt=\"Mode\" /> : <Image width=\"100%\"\n                  height=\"auto\" boxSize=\"25px\" src={Sun} alt=\"Mode\" />}\n            </Button>\n          </HStack>\n        </Box>\n        {noe !== null && web3State.chainId === 4 && (\n          <>\n            <Button name=\"button\" variant=\"link\" ref={btnRef} onClick={onOpen} size=\"sm\" py={10} mr={10} >\n              {colorMode === \"light\" ? <Image boxSize=\"25px\" src={BurgerBlack} alt=\"menu burger\" /> : <Image boxSize=\"25px\" src={BurgerWhite} alt=\"menu burger\" />}\n            </Button>\n            <Drawer\n              isOpen={isOpen}\n              placement=\"right\"\n              onClose={onClose}\n              finalFocusRef={btnRef}\n            >\n              <DrawerOverlay>\n                <DrawerContent>\n                  <DrawerCloseButton />\n                  <DrawerBody>\n                    <Box py={10}>\n                      <SimpleGrid py={5} mb={10}>\n                        <FormControl>\n                          <InputGroup>\n                            <Input _hover={{\n                              color: \"brand.900\",\n                            }} borderColor=\"brand.100\" value={inputAnimalById} onChange={(e) => { setInputAnimalById(e.currentTarget.value) }}\n                              size=\"md\" type=\"search\" variant=\"outline\" placeholder=\"Recherche animaux\" />\n                            <Center>\n                              <Button onClick={handleOnClickGetAnimalByID}\n                                _hover={{\n                                  bg: \"teal.500\",\n                                  fill: \"white\",\n                                }} bg=\"brand.100\">\n                                <Icon viewBox=\"0 0 512.005 512.005\" fill=\"white\" >\n                                  <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\n                                </Icon>\n                              </Button>\n                            </Center>\n                          </InputGroup>\n                        </FormControl>\n                      </SimpleGrid>\n                      <Text>{getValueAnimalById}</Text>\n                      <Spacer />\n                      <Box my={10} fontFamily=\"Montserrat, sans-serif\">\n                        <Button name=\"button\" _hover={{\n                          bg: \"brand.100\",\n                          color: \"white\",\n                        }} color=\"brand.100\" borderColor=\"brand.100\" textTransform='uppercase' mr={5} mb={5} variant=\"outline\">\n                          <Link to=\"/register\">espace inscription</Link>\n                        </Button>\n                      </Box>\n                    </Box>\n                  </DrawerBody>\n                </DrawerContent>\n              </DrawerOverlay>\n            </Drawer>\n          </>\n        )}\n      </Flex>\n\n\n      <Divider borderWidth=\"1px\" />\n    </>\n  )\n}\n\nexport default Nav\n",["86","87"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js",["88"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/ChiffresCles.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Register.js",["89","90","91"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel } from '@chakra-ui/core'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\nimport { Web3Context } from \"web3-hooks\"\nimport { useHistory } from \"react-router-dom\"\n\n\n\nfunction Register() {\n\n  const [web3State, login] = useContext(Web3Context);\n  const noe = useContext(NoeContext)\n  // const toast = useToast()\n  const history = useHistory()\n\n  const [inputValueName, setInputValueName] = useState(null)\n  const [inputValuePhoneNumber, setInputValuePhoneNumber] = useState(null)\n  const [inputValueNameMember, setInputValueNameMember] = useState(null)\n  const [inputValuePhoneMember, setInputValuePhoneMember] = useState(null)\n\n\n  const handleOnClickCreateMember = async () => {\n    try {\n      const CMTX1 = await noe.createMember(inputValueNameMember, inputValuePhoneMember)\n      const cb = () => {\n        history.push(\"/profil_particulier\")\n\n      }\n      const filter = noe.filters.MemberCreated(web3State.account)\n      noe.once(filter, cb)\n    } catch (e) {\n\n    }\n  }\n\n  const handleOnClickCreateVeterinary = async () => {\n    try {\n      const CVTX1 = await noe.createVeterinary(inputValueName, inputValuePhoneNumber)\n      const cb = () => {\n        history.push(\"/profil_veterinaire\")\n\n      }\n      const filter = noe.filters.VeterinaryCreated(web3State.account)\n      noe.once(filter, cb)\n    } catch (e) {\n\n    }\n  }\n\n\n  // useEffect(() => {\n  //   if (noe) {\n  //     const cb = (_address) => {\n  //       toast({\n  //         position: 'bottom',\n  //         title: `SET`,\n  //         description: `send by ${_address}`,\n  //         status: 'success',\n  //         duration: 10000,\n  //         isClosable: true,\n  //       })\n  //     }\n  //     console.log('USEEFFECT CALLED FOR TOAST')\n  //     noe.on('MemberCreated', cb)\n  //     return () => {\n  //       console.log('USEEFFECT CLEANUP FOR TOAST')\n  //       noe.off('MemberCreated', cb)\n  //     }\n  //   }\n  // }, [noe, toast])\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat, sans-serif\">\n        <Box my={10} >\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Inscription VÃ©tÃ©rinaires</Heading>\n              </Center>\n              <FormControl isRequired>\n                <Stack>\n                  <FormLabel pt={10} htmlFor=\"nom\">Nom</FormLabel >\n                  <Input id=\"nom\"\n                    value={inputValueName} onChange={(e) => { setInputValueName(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"nom\" />\n                  <FormLabel pt={10} htmlFor=\"mobile\">Mobile</FormLabel >\n                  <Input mb={20} id=\"mobile\"\n                    value={inputValuePhoneNumber} onChange={(e) => { setInputValuePhoneNumber(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"mobile\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" textTransform='uppercase' onClick={handleOnClickCreateVeterinary}>Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Inscription Particuliers</Heading>\n              </Center>\n              <FormControl isRequired >\n                <Stack >\n                  <FormLabel htmlFor=\"name\" pt={10}>Nom</FormLabel>\n                  <Input id=\"name\" value={inputValueNameMember} onChange={(e) => { setInputValueNameMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"name\" />\n                  <FormLabel htmlFor=\"tel\" pt={10}>Mobile</FormLabel>\n                  <Input mb={20} id=\"tel\" value={inputValuePhoneMember} onChange={(e) => { setInputValuePhoneMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"tel\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickCreateMember} textTransform='uppercase' >Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Register\n","/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Temoignage.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Contact.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/useContext/useContract.js",["92"],"import { ethers } from 'ethers'\nimport { useState, useEffect, useContext } from 'react'\nimport { Web3Context } from \"web3-hooks\"\n\nexport const useContract = (address, abi) => {\n  const [web3State, _] = useContext(Web3Context)\n  const [contract, setContract] = useState(null)\n  useEffect(() => {\n    if (web3State.signer) {\n      setContract(new ethers.Contract(address, abi, web3State.signer))\n    } else {\n      setContract(null)\n    }\n  }, [web3State.signer, address, abi])\n  return contract\n}\n",["93","94"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js",["95"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel, Select } from '@chakra-ui/core'\nimport Footer from '../Footer'\nimport NavVeteinaire from './NavVeterinaire'\nimport { NoeContext } from '../../App'\n\n\nfunction AjoutAnimal() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAddAdress, setInputValueAddAdress] = useState(null)\n  const [inputValueAddName, setInputValueAddName] = useState(null)\n  const [inputValueAddSexe, setInputValueAddSexe] = useState(null)\n  const [inputValueAddDate, setInputValueAddDate] = useState(null)\n  const [inputValueAddType, setInputValueAddType] = useState([\"Chien\", \"Chat\", \"Furet\"])\n  const [inputValueAddVaccin, setInputValueAddVaccin] = useState(null)\n\n\n  const handleOnClickAddAnimal = async () => {\n    const APVTX = await noe.animalToken(inputValueAddAdress, inputValueAddName, inputValueAddDate, inputValueAddSexe, inputValueAddVaccin, inputValueAddType)\n  }\n\n\n  return (\n    <>\n      <NavVeteinaire />\n      <VStack py={20} fontFamily=\"Montserrat, sans-serif\">\n        <Box my={10}>\n          <SimpleGrid columns={[1]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat, sans-serif\" mb={10}>Ajouter un Animal</Heading>\n              </Center>\n              <FormControl>\n                <Stack >\n                  <FormLabel htmlFor=\"ETH\" pt={5}>ETH</FormLabel>\n                  <Input value={inputValueAddAdress} onChange={(e) => { setInputValueAddAdress(e.currentTarget.value) }}\n                    id='ETH' variant=\"filled\" placeholder=\"Adresse ETH\" aria-label=\"ETH\" />\n                  <FormLabel htmlFor=\"nom\" pt={5}>Nom</FormLabel>\n                  <Input value={inputValueAddName} onChange={(e) => { setInputValueAddName(e.currentTarget.value) }}\n                    id='nom' variant=\"filled\" placeholder=\"nom\" aria-label=\"nom\" />\n                  <FormLabel htmlFor=\"Date\" pt={5}>Date de naissance</FormLabel>\n                  <Input value={inputValueAddDate} onChange={(e) => { setInputValueAddDate(e.currentTarget.value) }}\n                    id='sexe' variant=\"filled\" placeholder=\"Date de naissance\" aria-label=\"Date de naissance\" />\n                  <FormLabel htmlFor=\"date-de-naissance\" pt={5}>Sexe</FormLabel>\n                  <Input value={inputValueAddSexe} onChange={(e) => { setInputValueAddSexe(e.currentTarget.value) }}\n                    id='date-de-naissance' variant=\"filled\" placeholder=\"Sexe\" aria-label=\"Sexe\" />\n                  <FormLabel htmlFor=\"type\" pt={5}>Vaccin</FormLabel>\n                  <Select value={inputValueAddVaccin} onChange={(e) => { setInputValueAddVaccin(e.currentTarget.value) }}\n                    id='vaccin' variant=\"filled\" placeholder=\"Est-il vaccinÃ© ?\" aria-label=\"Vaccin\" >\n                    <option>Oui</option>\n                    <option>Non</option>\n                  </Select>\n                  <FormLabel htmlFor=\"type\" pt={5}>Type</FormLabel>\n                  <Select value={inputValueAddType} onChange={(e) => { setInputValueAddType(e.currentTarget.value) }}\n                    mb={20} id='type' variant=\"filled\" placeholder=\"SÃ©lectionner le type\" aria-label=\"Type\" >\n                    <option value=\"0\">Chien</option>\n                    <option value=\"1\">Chat</option>\n                    <option value=\"2\">Furet</option>\n                  </Select>\n                  <Button onClick={handleOnClickAddAnimal} _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" name=\"button\" textTransform='uppercase'>Ajouter</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n\n  )\n}\n\nexport default AjoutAnimal\n",["96","97"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_particulier/NavParticulier.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js",[],["98","99"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/index.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Home.js",[],["100","101"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/App.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Footer.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/Admin.js",["102"],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/CommentÃ§aMarche.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/contracts/NoeContract.js",[],"/Users/lsn971/Document/Projet_final/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js",["103"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Heading, Text, Box, Input, SimpleGrid, Image, Center, Button } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom';\nimport { NoeContext } from '../../App'\nimport Footer from '../Footer'\nimport NavVeteinaire from './NavVeterinaire'\nimport Woman from '../../assets/girl.svg'\nimport { Web3Context } from \"web3-hooks\"\n\nfunction Profilveterinaire() {\n  const noe = useContext(NoeContext)\n  const [web3State, login] = useContext(Web3Context)\n\n  const [name, setName] = useState();\n  const [tel, setTel] = useState();\n  const [diploma, setDiploma] = useState();\n\n  useEffect(() => {\n    (async () => {\n      if (noe !== null) {\n        const vetInfo = await noe.getVeterinary()\n        setName(vetInfo[0])\n        setTel(vetInfo[1])\n        setDiploma(vetInfo[2])\n      }\n    })()\n\n  }, [noe, web3State.account])\n\n  return (\n    <>\n      <NavVeteinaire />\n      <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\" mt={20} pt={10}>\n        <Box >\n          <Center>\n            <Heading fontFamily=\"Montserrat, sans-serif\" as=\"h2\">Mon espace</Heading>\n          </Center>\n        </Box>\n        <Box fontFamily=\"Montserrat, sans-serif\">\n          <Center>\n            <Button name=\"button\" _hover={{\n              bg: \"brand.100\",\n              color: \"white\",\n            }} color=\"brand.100\" borderColor=\"brand.100\" variant=\"outline\" textTransform='uppercase'>\n              <Link to=\"/ajout_animal\">Ajouter</Link>\n            </Button>\n          </Center>\n        </Box>\n      </SimpleGrid>\n      <Box fontFamily=\"Montserrat, sans-serif\" mb={150}>\n        <SimpleGrid my={20} mx={20} columns={[1, 1, 3]} spacing=\"40px\" p={30} fontFamily=\"Montserrat, sans-serif\" borderWidth=\"1px\" bg='brand.900' color='white' borderRadius={5}>\n          <Box>\n            <Image mb={10} borderRadius=\"full\" boxSize=\"100px\" objectFit=\"cover\" src={Woman} alt=\"avatar\" />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Nom :</Text>\n            <Input id=\"nom\" aria-label=\"nom\" isDisabled mb={20} variant=\"unstyled\" value={name} />\n            <Text fontWeight=\"bold\">TÃ©lÃ©phone :</Text>\n            <Input id=\"tel\" aria-label=\"tel\" isDisabled variant=\"unstyled\" value={tel} />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Adresse ETH :</Text>\n            <Input id=\"ETH\" aria-label=\"ETH\" isDisabled mb={20} variant=\"unstyled\" value={web3State.account} />\n            <Text fontWeight=\"bold\">Diplome :</Text>\n            <Input id=\"diplome\" aria-label=\"diplome\" isDisabled variant=\"unstyled\" value={diploma} />\n          </Box>\n        </SimpleGrid>\n      </Box>\n      <Footer />\n    </>\n  )\n}\n\nexport default Profilveterinaire\n",{"ruleId":"104","severity":1,"message":"105","line":2,"column":133,"nodeType":"106","messageId":"107","endLine":2,"endColumn":150},{"ruleId":"104","severity":1,"message":"108","line":38,"column":9,"nodeType":"106","messageId":"107","endLine":38,"endColumn":16},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"104","severity":1,"message":"113","line":14,"column":21,"nodeType":"106","messageId":"107","endLine":14,"endColumn":26},{"ruleId":"104","severity":1,"message":"113","line":13,"column":21,"nodeType":"106","messageId":"107","endLine":13,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":26,"column":13,"nodeType":"106","messageId":"107","endLine":26,"endColumn":18},{"ruleId":"104","severity":1,"message":"115","line":40,"column":13,"nodeType":"106","messageId":"107","endLine":40,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":6,"column":21,"nodeType":"106","messageId":"107","endLine":6,"endColumn":22},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"104","severity":1,"message":"119","line":21,"column":11,"nodeType":"106","messageId":"107","endLine":21,"endColumn":16},{"ruleId":"109","replacedBy":"120"},{"ruleId":"111","replacedBy":"121"},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"104","severity":1,"message":"119","line":20,"column":11,"nodeType":"106","messageId":"107","endLine":20,"endColumn":16},{"ruleId":"104","severity":1,"message":"113","line":12,"column":21,"nodeType":"106","messageId":"107","endLine":12,"endColumn":26},"no-unused-vars","'useColorModeValue' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'login' is assigned a value but never used.","'CMTX1' is assigned a value but never used.","'CVTX1' is assigned a value but never used.","'_' is assigned a value but never used.",["126"],["127"],"'APVTX' is assigned a value but never used.",["126"],["127"],["126"],["127"],["126"],["127"],"no-global-assign","no-unsafe-negation"]